generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model vehicule {
  id_vehicule       Int                     @id
  marque            String
  type              String
  n_immatriculation String
  n_serie           String
  date_acquisition  DateTime
  prix_acquisition  Float
  etat              String
  kilometrage       Int
  genre             String
  n_inventaire      String
  niveau_id         Int
  niveau            Niveau                  @relation("NiveauVehicule", fields: [niveau_id], references: [code_niveau])
  panne             demande_interventionT[]
}

model Niveau {
  code_niveau    Int                     @id
  designation    String
  type_hierachie String
  parent_id      Int?
  parent         Niveau?                 @relation("Hierarchy", fields: [parent_id], references: [code_niveau], onDelete: NoAction, onUpdate: NoAction)
  enfants        Niveau[]                @relation("Hierarchy")
  vehicules      vehicule[]              @relation("NiveauVehicule")
  services       service[]               @relation("NiveauService")
  utilisateursB  utilisateur[]           @relation("BrancheUtilisateur")
  utilisateursD  utilisateur[]           @relation("DistrictUtilisateur")
  utilisateursC  utilisateur[]           @relation("CentreUtilisateur")
  panneD         demande_interventionT[] @relation("DistrictDemande")
  panneC         demande_interventionT[] @relation("CentreDemande")
  panneB         demande_interventionT[] @relation("BrancheDemande")
  rapportD       rapport_intervention[]  @relation("DistrictRapport")
  rapportC       rapport_intervention[]  @relation("CentreRapport")
  rapportB       rapport_intervention[]  @relation("BrancheRapport")
}

model service {
  id_service   Int           @id
  type_service String
  id_niveau    Int
  niveau       Niveau        @relation("NiveauService", fields: [id_niveau], references: [code_niveau])
  utilisateurs utilisateur[] @relation("ServiceUtilisateur")
}

model utilisateur {
  id_utilisateur Int     @id @default(autoincrement())
  nom            String
  prenom         String
  email          String
  mot_de_passe   String
  username       String
  est_admin      Boolean
  role           String
  branche_id     Int?
  district_id    Int?
  centre_id      Int?
  service_id     Int?

  branche  Niveau?  @relation("BrancheUtilisateur", fields: [branche_id], references: [code_niveau], onDelete: NoAction, onUpdate: NoAction)
  district Niveau?  @relation("DistrictUtilisateur", fields: [district_id], references: [code_niveau], onDelete: NoAction, onUpdate: NoAction)
  centre   Niveau?  @relation("CentreUtilisateur", fields: [centre_id], references: [code_niveau], onDelete: NoAction, onUpdate: NoAction)
  service  service? @relation("ServiceUtilisateur", fields: [service_id], references: [id_service], onDelete: NoAction, onUpdate: NoAction)
}

model demande_interventionT {
  id_demande_intervention       Int                             @id @default(autoincrement())
  date_application              DateTime
  date_heure_panne              DateTime
  structure_maintenance         String
  activite                      String                          @default("material roulant")
  nature_panne                  String
  nature_travaux                String
  degre_urgence                 String
  id_vehicule                   Int
  vehicule                      vehicule                        @relation(fields: [id_vehicule], references: [id_vehicule])
  district_id                   Int
  destrict                      Niveau                          @relation("DistrictDemande", fields: [district_id], references: [code_niveau], onDelete: NoAction, onUpdate: NoAction)
  centre_id                     Int
  centre                        Niveau                          @relation("CentreDemande", fields: [centre_id], references: [code_niveau], onDelete: NoAction, onUpdate: NoAction)
  branche_id                    Int
  branche                       Niveau                          @relation("BrancheDemande", fields: [branche_id], references: [code_niveau], onDelete: NoAction, onUpdate: NoAction)
  rapport_intervention          rapport_intervention[]
  demande_interventionM         demande_interventionM[]
}

model rapport_intervention {
  id_rapport_intervention Int                   @id @default(autoincrement())
  id_demande_intervention Int
  demande_interventionT   demande_interventionT @relation(fields: [id_demande_intervention], references: [id_demande_intervention], onDelete: NoAction, onUpdate: NoAction)
  date_application        DateTime
  date_debut_travaux      DateTime
  date_fin_travaux        DateTime
  date_panne              DateTime
  date_prise_charge       DateTime
  district_id             Int
  district                Niveau                @relation("DistrictRapport", fields: [district_id], references: [code_niveau], onDelete: NoAction, onUpdate: NoAction)
  centre_id               Int
  centre                  Niveau                @relation("CentreRapport", fields: [centre_id], references: [code_niveau], onDelete: NoAction, onUpdate: NoAction)
  branche_id              Int
  branche                 Niveau                @relation("BrancheRapport", fields: [branche_id], references: [code_niveau], onDelete: NoAction, onUpdate: NoAction)
  duree_travaux           String
  description_essais      String
  essais                  Boolean
  reservation             String?
  traveaux_interne        traveaux_interne[]
  total_traveaux_interne  Int
  traveaux_externe        traveaux_externe[]
  total_traveaux_externe  Int
  reference_document√©e   String
  date_fin_permis         DateTime
}

model demande_interventionM {
  id                   Int                  @id @default(autoincrement())
  id_demande_intervention Int
  demande_intervention demande_interventionT @relation(fields: [id_demande_intervention], references: [id_demande_intervention], onDelete: Cascade, onUpdate: Cascade)
  id_vehicle           Int
  constat_panne        String
  diagnostique         String
  description          String
  niveaux_prio         Int
  necess_permis       Boolean
  routinier            Boolean
  routinier_ref      String?
  dangereux           Boolean
  dangereux_ref      String?
}

model traveaux_interne {
  id_travaille        Int                  @id @default(autoincrement())
  id_rapport          Int
  rapport             rapport_intervention @relation(fields: [id_rapport], references: [id_rapport_intervention], onDelete: Cascade, onUpdate: Cascade)
  atelier             String
  temps_alloue        Int
  PDR_consommee       String
  cout_pdr            Int
  reference_bc_bm_btm String
}

model traveaux_externe {
  id_travaille       Int                  @id @default(autoincrement())
  id_rapport         Int
  rapport            rapport_intervention @relation(fields: [id_rapport], references: [id_rapport_intervention], onDelete: Cascade, onUpdate: Cascade)
  design_prestataire String
  reference_contrat  String
  reference_facture  String
  cout_facture       Int
}
